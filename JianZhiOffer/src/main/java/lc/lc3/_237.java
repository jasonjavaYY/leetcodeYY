package lc.lc3;

/*
* 删除链表中的节点
*
* 请编写一个函数，用于删除单链表中某个特定节点 。在设计函数时需要注意，你无法访问链表的头节点 head ，只能直接访问要被删除的节点 。
题目数据保证需要删除的节点 不是末尾节点 。
示例 1：
输入：head = [4,5,1,9], node = 5
输出：[4,1,9]
解释：指定链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9
示例 2：
输入：head = [4,5,1,9], node = 1
输出：[4,5,9]
解释：指定链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -> 5 -> 9
*
* 方法一：和下一个节点交换
删除链表中的节点的常见的方法是定位到待删除节点的上一个节点，修改 next 指针，使其指向待删除节点的下一个节点，即可完成删除操作。
这道题中，传入的参数 node 为要被删除的节点，无法定位到该节点的上一个节点。注意到要被删除的节点不是链表的末尾节点，
* 因此 node.next 不为空，可以通过对 node 和 node.next 进行操作实现删除节点。
* 为了达到删除 node 的效果，只要在删除节点之前，将node 的节点值修改为 node.next 的节点值即可。
例如，给定链表 4→5→1→9，要被删除的节点是 5，即链表中的第 2 个节点。可通过下两步操作实现。将第 2 个节点的值修改为第 3 个节点的值，
* 即将节点 5 的值修改为 1，此时链表如下：4→1→1→9删除第 3 个节点，此时链表如下：4→1→9,达到删除节点 5 效果。
* */
//删除单链表中某个特定节点
public class _237 {
    public void deleteNode(ListNode node) {
        node.val = node.next.val;//将next的值赋予该节点
        node.next = node.next.next;//node的next指向next的next，删除next节点
    }

    class ListNode {
        ListNode next;
        int val;
    }
}
